name: Deploy Auth System

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      reason:
        description: '部署原因'
        required: false
        default: '手动触发部署'
      domain:
        description: '部署域名'
        required: false
        default: 'tinotools.cn'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置PHP环境
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.2'
        extensions: mbstring, dom, fileinfo, curl, sqlite3, pdo_sqlite
        tools: composer:v2
    
    - name: 安装依赖
      run: |
        composer install --no-dev --optimize-autoloader
    
    - name: 代码检查
      run: |
        php -l public/index.php || true
        find admin -type f -name "*.php" -exec php -l {} \; || true
        echo "PHP语法检查完成"
    
    - name: 安装部署工具
      run: |
        sudo apt-get update
        sudo apt-get install -y dos2unix

    - name: 设置SSH密钥
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
        config: |
          Host server
            HostName ${{ secrets.SERVER_IP }}
            Port ${{ secrets.SERVER_PORT }}
            User ${{ secrets.SERVER_USER }}
            IdentityFile ~/.ssh/id_rsa
    
    - name: 部署到服务器
      env:
        DOMAIN: ${{ github.event.inputs.domain || 'tinotools.cn' }}
      run: |
        # 备份当前文件
        ssh server "mkdir -p /var/www/backups/$(date +%Y%m%d)"
        ssh server "cp -r /www/wwwroot/tinotools/auth/public_html /var/www/backups/$(date +%Y%m%d)/auth || true"
        ssh server "cp -r /www/wwwroot/tinotools/admin/public_html /var/www/backups/$(date +%Y%m%d)/admin || true"
        
        # 创建必要的目录
        ssh server "mkdir -p /www/wwwroot/tinotools/auth/public_html"
        ssh server "mkdir -p /www/wwwroot/tinotools/admin/public_html"
        ssh server "mkdir -p /www/wwwroot/tinotools/config"
        ssh server "mkdir -p /var/log/auth"
        
        # 转换所有的换行符为Unix格式
        find . -type f -name "*.php" -exec dos2unix {} \; || true
        find . -type f -name "*.sh" -exec dos2unix {} \; || true
        
        # 部署认证系统文件
        scp -r public/* server:/www/wwwroot/tinotools/auth/public_html/ || echo "没有public文件夹，跳过"
        
        # 部署管理后台文件
        if [ -d "admin" ]; then
          scp -r admin/* server:/www/wwwroot/tinotools/admin/public_html/
        else
          echo "没有admin文件夹，跳过"
        fi
        
        # 部署配置文件
        if [ -d "config" ]; then
          scp -r config/* server:/www/wwwroot/tinotools/config/
        else
          echo "没有config文件夹，跳过"
        fi
        
        # 部署.env文件
        if [ -f ".env.example" ]; then
          scp -r .env.example server:/www/wwwroot/tinotools/.env.example
        else
          echo "没有.env.example文件，跳过"
        fi
        
        # 部署Nginx配置文件
        # 先删除可能冲突的配置文件
        ssh server "sudo mkdir -p /etc/nginx/conf.d.bak/$(date +%Y%m%d)"
        ssh server "sudo mv /etc/nginx/conf.d/auth.conf /etc/nginx/conf.d.bak/$(date +%Y%m%d)/auth.conf.bak || true"
        ssh server "sudo mv /etc/nginx/conf.d/n8n.conf /etc/nginx/conf.d.bak/$(date +%Y%m%d)/n8n.conf.bak || true"
        ssh server "sudo mv /etc/nginx/conf.d/ssl.conf /etc/nginx/conf.d.bak/$(date +%Y%m%d)/ssl.conf.bak || true"
        ssh server "sudo cp /etc/nginx/conf.d/*.conf /etc/nginx/conf.d.bak/$(date +%Y%m%d)/ || true"
        
        # 上传新的配置文件
        scp nginx/*.tinotools.cn.conf server:/tmp/
        ssh server "sudo mv /tmp/*.conf /etc/nginx/conf.d/"
        ssh server "sudo nginx -t && sudo systemctl reload nginx || (echo '❌ Nginx配置测试失败' && exit 1)"
        
        # 部署脚本文件
        if [ -d "scripts" ]; then
          scp -r scripts server:/www/wwwroot/tinotools/
          ssh server "chmod +x /www/wwwroot/tinotools/scripts/*.sh || true"
        else
          echo "没有scripts文件夹，跳过"
        fi
        
        # 替换域名（如果不是默认的tinotools.cn）
        if [[ "$DOMAIN" != "tinotools.cn" ]]; then
          echo "自定义域名: $DOMAIN，更新配置中..."
          
          # 更新环境文件
          ssh server "sed -i 's/tinotools.cn/$DOMAIN/g' /www/wwwroot/tinotools/.env.example"
          ssh server "cp /www/wwwroot/tinotools/.env.example /www/wwwroot/tinotools/.env"
          
          # 更新配置文件
          ssh server "sed -i 's/tinotools.cn/$DOMAIN/g' /www/wwwroot/tinotools/config/config.php || true"
          
          # 更新Nginx配置
          ssh server "for file in /etc/nginx/conf.d/*.conf; do sed -i 's/tinotools.cn/$DOMAIN/g' \$file; done"
          ssh server "sudo nginx -t && sudo systemctl reload nginx || (echo '❌ Nginx配置测试失败' && exit 1)"
        fi
        
        # 设置文件权限
        ssh server "find /www/wwwroot/tinotools -type f -exec chmod 644 {} \;"
        ssh server "find /www/wwwroot/tinotools -type d -exec chmod 755 {} \;"
        ssh server "find /www/wwwroot/tinotools/scripts -type f -name '*.sh' -exec chmod +x {} \; || true"
        ssh server "chown -R nginx:nginx /www/wwwroot/tinotools"
        
        # 验证部署
        echo "验证部署状态..."
        SSH_DOMAIN=${DOMAIN:-tinotools.cn}
        
        # 检查auth服务
        echo "auth.${SSH_DOMAIN} 部署状态:"
        DEPLOY_CHECK=$(ssh server "ls -la /www/wwwroot/tinotools/auth/public_html/index.php || echo '文件不存在'")
        echo "$DEPLOY_CHECK"
        
        # 检查admin服务（如果存在）
        echo "admin.${SSH_DOMAIN} 部署状态:"
        ADMIN_CHECK=$(ssh server "ls -la /www/wwwroot/tinotools/admin/public_html/index.php || echo '文件不存在'")
        echo "$ADMIN_CHECK"
        
        echo "🎉 部署过程完成!"
    
    - name: 发送部署通知
      if: always()
      env:
        DOMAIN: ${{ github.event.inputs.domain || 'tinotools.cn' }}
      run: |
        STATUS="${{ job.status }}"
        if [ "$STATUS" = "success" ]; then
          echo "✅ 部署成功：所有系统已成功部署到服务器"
          echo "- auth.${DOMAIN} - 认证系统"
          echo "- admin.${DOMAIN} - 管理后台"
          echo "- n8n.${DOMAIN} - 工作流自动化"
        else
          echo "❌ 部署失败：请检查日志确定原因"
        fi 